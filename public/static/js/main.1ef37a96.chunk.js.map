{"version":3,"sources":["components/display.js","components/button.js","components/buttonPanel.js","logic/operate.js","components/App.js","logic/calculate.js","logic/isNumber.js","serviceWorker.js","index.js"],"names":["Display","react_default","a","createElement","className","this","props","value","React","Component","Button","handleClick","_this","clickHandler","name","orange","wide","join","trim","onClick","ButtonPanel","buttonName","button_Button","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","concat","App","state","total","next","setState","obj","test","result","includes","parseFloat","calculate","display_Display","buttonPanel_ButtonPanel","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ef37a96.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className=\"component-display\">\n        <div>{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    orange: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.orange ? \"orange\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button onClick={this.handleClick}>{this.props.name}</button>\n      </div>\n    );\n  }\n}\n","import Button from './button';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ButtonPanel extends React.Component {\n  static propTypes = {\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = buttonName => {\n    this.props.clickHandler(buttonName);\n  };\n\n  render() {\n    return (\n      <div className=\"component-button-panel\">\n        <div>\n          <Button name=\"AC\" clickHandler={this.handleClick} />\n          <Button name=\"+/-\" clickHandler={this.handleClick} />\n          <Button name=\"%\" clickHandler={this.handleClick} />\n          <Button name=\"/\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"7\" clickHandler={this.handleClick} />\n          <Button name=\"8\" clickHandler={this.handleClick} />\n          <Button name=\"9\" clickHandler={this.handleClick} />\n          <Button name=\"x\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"4\" clickHandler={this.handleClick} />\n          <Button name=\"5\" clickHandler={this.handleClick} />\n          <Button name=\"6\" clickHandler={this.handleClick} />\n          <Button name=\"-\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"1\" clickHandler={this.handleClick} />\n          <Button name=\"2\" clickHandler={this.handleClick} />\n          <Button name=\"3\" clickHandler={this.handleClick} />\n          <Button name=\"+\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"0\" clickHandler={this.handleClick} />\n          <Button name=\".\" clickHandler={this.handleClick} />\n          <Button name=\"=\" clickHandler={this.handleClick} orange />\n        </div>\n      </div>\n\n    );\n  }\n}\n","import Big from 'big.js';\n\nexport default function operate(numberOne, numberTwo, operation) {\n  const one = Big(numberOne || \"0\");\n  const two = Big(numberTwo || (operation === \"/\" || operation === \"x\" ? \"1\" : \"0\"));\n\n  if (operation === \"+\") {\n    return one.plus(two).toString();\n  }\n\n  if (operation === \"-\") {\n    return one.minus(two).toString();\n  }\n\n  if (operation === \"x\") {\n    return one.times(two).toString();\n  }\n\n  if (operation === \"/\") {\n    if (two === \"0\") {\n      alert(\"Divide by 0 error\");\n      return \"0\";\n    } else {\n      return one.div(two).toString();\n    }\n  }\n  throw Error(`unkown operation '${operation}'`);\n}\n","import React from 'react';\nimport Display from './display';\nimport ButtonPanel from './buttonPanel';\n\nimport calculate from '../logic/calculate';\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n  };\n\n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  };\n\n  render() {\n    return (\n      <div className=\"component-app\">\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n","import Big from 'big.js';\n\nimport isNumber from './isNumber';\nimport operate from './operate';\n\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === \"%\") {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result).div(Big(\"100\")).toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next).div(Big(\"100\")).toString(),\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      return {};\n    }\n  }\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  return  {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","export default function isNumber(str) {\n  return /[0-9]+/.test(str)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}